pipeline MowestaDataPipeline {

    block MowestaZipExtractor oftype ZipExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    } 
    
    block MowestaArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    } 
    
    block MowestaFilePicker oftype FilePicker {
        path: "data.csv"; 
    }

    block MowestaFileInterpreter oftype TextFileInterpreter{

    }
     
    block MowestaCSVInterpreter oftype CSVInterpreter {
        delimiter: ",";
    }
    
    block MowestaColumnPicker oftype ColumnPicker {
        keep: ["Geraet", "Hersteller", "Model", "Monat", "Temperatur in 째C (DWD)", "Batterietemperatur in 째C", "Geraet aktiv"];
    }

    block MowestaColumnRenamer oftype ColumnRenamer {
        rename: [
            column: "Temperatur in 째C (DWD)", newColumn: "Temperatur" ,
            column: "Batterietemperatur in 째C", newColumn: "Batterietemperatur" 
        ];
    }

    transform MowestaCelsiusToFahrenheit {
        from celsius oftype decimal;
        to fahrenheit oftype decimal;
        fahrenheit: (celsius * 9/5) + 32;
    } 

    block MowestaTemperatureTransformer oftype TableTransformer {
        inputColumns: ["Temperatur", "Batterietemperatur"];
        outputColumns: ["Temperatur", "Batterietemperatur"];
        use: MowestaCelsiusToFahrenheit;
    }

    constraint MowestaValidGeraetId on decimal:
        value > 0;

    block MowestaTableValidator oftype DataValidator {
        constraints: [
            { column: "Geraet", constraint: MowestaValidGeraetId }
        ];
    } 

    block MowestaDBLoader oftype SQLiteLoader {
        table: "temperatures";
        file: "temperatures.sqlite";
    } 

   MowestaZipExtractor 
    -> MowestaArchiveInterpreter
    -> MowestaFilePicker
    -> MowestaFileInterpreter
    -> MowestaCSVInterpreter
    -> MowestaColumnPicker
    -> MowestaColumnRenamer
    -> MowestaTemperatureTransformer
    -> MowestaTableValidator
    -> MowestaDBLoader;
}
