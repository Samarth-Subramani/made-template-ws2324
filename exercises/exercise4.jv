pipeline MowestaPipeline {
    MowestaZipExtractor
        -> ZipInterpreter
        -> CsvFilePicker
        -> CSVTextFileInterpreter
        -> DataCsvInterpreter
        -> TableColumnDeleter
        -> FirstRowDeleter
        -> MowestaTableInterpreter
        -> TempCelsiusToFahrenheitTransformer
        -> BatTempCelsiusToFahrenheitTransformer
        -> MowestaDBLoader;

    block MowestaZipExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block ZipInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block CsvFilePicker oftype FilePicker {
        source: "mowesta-dataset";
        path: "/data.csv";
        dest: "reshaped-data.csv";
    }

    block CSVTextFileInterpreter oftype TextFileInterpreter {
        encoding: "utf8";
    }

    block DataCsvInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

    block TableColumnDeleter oftype ColumnDeleter {
        source: "reshaped-data.csv";
        delete: [column F, column G, column H, column I, column L, column M, column N, column O];
        dest: "transformed-data.csv";
    }

    block FirstRowDeleter oftype RowDeleter {
        source: "transformed-data.csv";
        delete: [row 1];
        dest: "validated-data.csv";
    }

    block MowestaTableInterpreter oftype TableInterpreter {
        source: "validated-data.csv";
        header: false;
        columns: [
            "Geraet" oftype PosIntegerType,
            "Hersteller" oftype text,
            "Model" oftype text,
            "Monat" oftype integer,
            "Temperatur" oftype decimal,
            "Batterietemperatur" oftype decimal,
            "Geraet aktiv" oftype text,
        ];
    }

    block TempCelsiusToFahrenheitTransformer oftype TableTransformer {
        source: "validated-data.csv";
        inputColumns: ["Temperatur"];
        outputColumn: "Temperatur";
        use: CelsiusToFahrenheit;
        dest: "transformed-data.csv";
    }

    block BatTempCelsiusToFahrenheitTransformer oftype TableTransformer {
        source: "validated-data.csv";
        inputColumns: ["Batterietemperatur"];
        outputColumn: "Batterietemperatur";
        use: CelsiusToFahrenheit;
        dest: "transformed-data.csv";
    }

    transform CelsiusToFahrenheit {
        from celsius oftype decimal;
        to fahrenheit oftype decimal;
        fahrenheit: (celsius * 9/5) + 32;
    }

    block MowestaDBLoader oftype SQLiteLoader {
        source: "validated-data.csv";
        table: "temperatures";
        file: "./temperatures.sqlite";
    }

    valuetype PosIntegerType oftype integer {
        constraints: [ PostRange ];
    }

    constraint PostRange oftype RangeConstraint {
        lowerBound: 1;
        lowerBoundInclusive: true;
    }
}
