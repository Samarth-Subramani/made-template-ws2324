pipeline ModifiedMowestaPipeline {

    block ZipExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block ZipInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block CsvFilePicker oftype FilePicker {
        path: "/data.csv";
    }

    block CSVTextFileInterpreter oftype TextFileInterpreter {
        encoding: "utf8";
    }

    block DataCsvInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }
    
    block RenameTemperaturCellWriter oftype CellWriter {
        at: cell E1;
        write: ["Temperatur"]; 
    }

    block RenameBatterieTemperaturCellWriter oftype CellWriter {
        at: cell J1;
        write: ["Batterietemperatur"]; 
    }  

    block TableInterpreter oftype TableInterpreter {
        header: false;
        columns: [
            "Geraet" oftype PosIntegerType,
            "Hersteller" oftype text,
            "Model" oftype text,
            "Monat" oftype integer,
            "Temperatur" oftype decimal,
            "Batterietemperatur" oftype decimal,
            "Geraet aktiv" oftype text,
        ];
    }

    block TempTransformer oftype TableTransformer {
        inputColumns: ["Temperatur"];
        outputColumn: "Temperatur";
        use: CelsiusToFahrenheitTransformer;
    }

    block BatterieTempTransformer oftype TableTransformer {
        inputColumns: ["Batterietemperatur"];
        outputColumn: "Batterietemperatur";
        use: CelsiusToFahrenheit;
    }

    transform CelsiusToFahrenheit {
        from Celsius oftype decimal;
        to Fahrenheit oftype decimal;
        Fahrenheit: (Celsius * 9/5) + 32;
    }

    block DBLoader oftype SQLiteLoader {
        table: "temperatures";
        file: "./temperatures.sqlite";
    }

    valuetype PosIntegerType oftype integer {
        constraints: [PostRange];
    }

    constraint PostRange oftype RangeConstraint {
        lowerBound: 1;
        lowerBoundInclusive: true;
    }

    ZipExtractor
        -> ZipInterpreter
        -> CsvFilePicker
        -> CSVTextFileInterpreter
        -> DataCsvInterpreter
        -> RenameTemperaturCellWriter
        -> RenameBatterieTemperaturCellWriter
        -> TableInterpreter
        -> TempTransformer
        -> BatterieTempTransformer
        -> DBLoader;
}
